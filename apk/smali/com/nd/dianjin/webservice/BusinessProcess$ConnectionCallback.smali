.class public Lcom/nd/dianjin/webservice/BusinessProcess$ConnectionCallback;
.super Ljava/lang/Object;

# interfaces
.implements Lcom/nd/dianjin/webservice/ConnectionWrapper$ConnectionInterface;


# static fields
.field private static synthetic e:[I


# instance fields
.field private a:Lcom/nd/dianjin/webservice/BusinessProcess$ResponseListener;

.field private b:Lcom/nd/dianjin/webservice/b;

.field private c:Lcom/nd/dianjin/webservice/BusinessProcess$ResponseType;

.field private d:Landroid/os/Handler;


# direct methods
.method constructor <init>(Lcom/nd/dianjin/webservice/BusinessProcess$ResponseType;Lcom/nd/dianjin/webservice/BusinessProcess$ResponseListener;Lcom/nd/dianjin/webservice/b;Landroid/os/Handler;)V
    .locals 0

    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    iput-object p2, p0, Lcom/nd/dianjin/webservice/BusinessProcess$ConnectionCallback;->a:Lcom/nd/dianjin/webservice/BusinessProcess$ResponseListener;

    iput-object p3, p0, Lcom/nd/dianjin/webservice/BusinessProcess$ConnectionCallback;->b:Lcom/nd/dianjin/webservice/b;

    iput-object p1, p0, Lcom/nd/dianjin/webservice/BusinessProcess$ConnectionCallback;->c:Lcom/nd/dianjin/webservice/BusinessProcess$ResponseType;

    iput-object p4, p0, Lcom/nd/dianjin/webservice/BusinessProcess$ConnectionCallback;->d:Landroid/os/Handler;

    return-void
.end method

.method private static synthetic a()[I
    .locals 3

    sget-object v0, Lcom/nd/dianjin/webservice/BusinessProcess$ConnectionCallback;->e:[I

    if-eqz v0, :cond_0

    :goto_0
    return-object v0

    :cond_0
    invoke-static {}, Lcom/nd/dianjin/webservice/BusinessProcess$ResponseType;->values()[Lcom/nd/dianjin/webservice/BusinessProcess$ResponseType;

    move-result-object v0

    array-length v0, v0

    new-array v0, v0, [I

    :try_start_0
    sget-object v1, Lcom/nd/dianjin/webservice/BusinessProcess$ResponseType;->JSONArray:Lcom/nd/dianjin/webservice/BusinessProcess$ResponseType;

    invoke-virtual {v1}, Lcom/nd/dianjin/webservice/BusinessProcess$ResponseType;->ordinal()I

    move-result v1

    const/4 v2, 0x2

    aput v2, v0, v1
    :try_end_0
    .catch Ljava/lang/NoSuchFieldError; {:try_start_0 .. :try_end_0} :catch_2

    :goto_1
    :try_start_1
    sget-object v1, Lcom/nd/dianjin/webservice/BusinessProcess$ResponseType;->JSONObject:Lcom/nd/dianjin/webservice/BusinessProcess$ResponseType;

    invoke-virtual {v1}, Lcom/nd/dianjin/webservice/BusinessProcess$ResponseType;->ordinal()I

    move-result v1

    const/4 v2, 0x1

    aput v2, v0, v1
    :try_end_1
    .catch Ljava/lang/NoSuchFieldError; {:try_start_1 .. :try_end_1} :catch_1

    :goto_2
    :try_start_2
    sget-object v1, Lcom/nd/dianjin/webservice/BusinessProcess$ResponseType;->Raw:Lcom/nd/dianjin/webservice/BusinessProcess$ResponseType;

    invoke-virtual {v1}, Lcom/nd/dianjin/webservice/BusinessProcess$ResponseType;->ordinal()I

    move-result v1

    const/4 v2, 0x3

    aput v2, v0, v1
    :try_end_2
    .catch Ljava/lang/NoSuchFieldError; {:try_start_2 .. :try_end_2} :catch_0

    :goto_3
    sput-object v0, Lcom/nd/dianjin/webservice/BusinessProcess$ConnectionCallback;->e:[I

    goto :goto_0

    :catch_0
    move-exception v1

    goto :goto_3

    :catch_1
    move-exception v1

    goto :goto_2

    :catch_2
    move-exception v1

    goto :goto_1
.end method


# virtual methods
.method public onError(Lcom/nd/dianjin/webservice/ConnectionWrapper$ErrorType;)V
    .locals 2

    iget-object v0, p0, Lcom/nd/dianjin/webservice/BusinessProcess$ConnectionCallback;->a:Lcom/nd/dianjin/webservice/BusinessProcess$ResponseListener;

    invoke-virtual {v0}, Lcom/nd/dianjin/webservice/BusinessProcess$ResponseListener;->wasRequestCancelled()Z

    move-result v0

    if-eqz v0, :cond_0

    :goto_0
    return-void

    :cond_0
    invoke-static {}, Lcom/nd/dianjin/webservice/BusinessProcess;->a()Z

    move-result v0

    if-eqz v0, :cond_1

    iget-object v0, p0, Lcom/nd/dianjin/webservice/BusinessProcess$ConnectionCallback;->b:Lcom/nd/dianjin/webservice/b;

    invoke-virtual {v0}, Lcom/nd/dianjin/webservice/b;->b()V

    :cond_1
    invoke-static {}, Lcom/nd/dianjin/webservice/BusinessProcess;->b()Z

    move-result v0

    if-eqz v0, :cond_2

    iget-object v0, p0, Lcom/nd/dianjin/webservice/BusinessProcess$ConnectionCallback;->d:Landroid/os/Handler;

    new-instance v1, Lcom/nd/dianjin/webservice/e;

    invoke-direct {v1, p0, p1}, Lcom/nd/dianjin/webservice/e;-><init>(Lcom/nd/dianjin/webservice/BusinessProcess$ConnectionCallback;Lcom/nd/dianjin/webservice/ConnectionWrapper$ErrorType;)V

    invoke-virtual {v0, v1}, Landroid/os/Handler;->post(Ljava/lang/Runnable;)Z

    :cond_2
    iget-object v0, p0, Lcom/nd/dianjin/webservice/BusinessProcess$ConnectionCallback;->a:Lcom/nd/dianjin/webservice/BusinessProcess$ResponseListener;

    invoke-virtual {v0}, Lcom/nd/dianjin/webservice/BusinessProcess$ResponseListener;->onError()V

    goto :goto_0
.end method

.method public onResponse(Ljava/io/InputStream;)V
    .locals 5

    const/4 v4, 0x2

    iget-object v0, p0, Lcom/nd/dianjin/webservice/BusinessProcess$ConnectionCallback;->a:Lcom/nd/dianjin/webservice/BusinessProcess$ResponseListener;

    invoke-virtual {v0}, Lcom/nd/dianjin/webservice/BusinessProcess$ResponseListener;->wasRequestCancelled()Z

    move-result v0

    if-eqz v0, :cond_1

    :cond_0
    :goto_0
    return-void

    :cond_1
    new-instance v0, Lcom/nd/dianjin/webservice/ServiceResponse;

    invoke-direct {v0}, Lcom/nd/dianjin/webservice/ServiceResponse;-><init>()V

    invoke-static {p1, v0}, Lcom/nd/dianjin/webservice/BusinessProcess;->convertStreamToString(Ljava/io/InputStream;Lcom/nd/dianjin/webservice/ServiceResponse;)Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v0}, Lcom/nd/dianjin/webservice/ServiceResponse;->getAct()S

    move-result v2

    if-ne v2, v4, :cond_2

    invoke-virtual {v0}, Lcom/nd/dianjin/webservice/ServiceResponse;->getResponErrorCode()I

    move-result v2

    const/16 v3, 0x3e9

    if-eq v2, v3, :cond_2

    invoke-virtual {v0}, Lcom/nd/dianjin/webservice/ServiceResponse;->getResponErrorCode()I

    move-result v2

    if-ne v2, v4, :cond_3

    :cond_2
    invoke-static {}, Landroid/os/Message;->obtain()Landroid/os/Message;

    move-result-object v2

    sget v3, Lcom/nd/dianjin/webservice/BusinessProcess;->SUCCESS:I

    iput v3, v2, Landroid/os/Message;->what:I

    invoke-virtual {v0}, Lcom/nd/dianjin/webservice/ServiceResponse;->getAct()S

    move-result v3

    iput v3, v2, Landroid/os/Message;->arg1:I

    invoke-virtual {v0}, Lcom/nd/dianjin/webservice/ServiceResponse;->getResponErrorCode()I

    move-result v0

    iput v0, v2, Landroid/os/Message;->arg2:I

    iput-object v1, v2, Landroid/os/Message;->obj:Ljava/lang/Object;

    iget-object v0, p0, Lcom/nd/dianjin/webservice/BusinessProcess$ConnectionCallback;->d:Landroid/os/Handler;

    invoke-static {v0, v2}, Lcom/nd/dianjin/webservice/BusinessProcess;->sendSuccessMessage(Landroid/os/Handler;Landroid/os/Message;)V

    goto :goto_0

    :cond_3
    invoke-virtual {v0}, Lcom/nd/dianjin/webservice/ServiceResponse;->getResponErrorCode()I

    move-result v0

    if-nez v0, :cond_4

    :try_start_0
    invoke-static {}, Lcom/nd/dianjin/webservice/BusinessProcess$ConnectionCallback;->a()[I

    move-result-object v0

    iget-object v2, p0, Lcom/nd/dianjin/webservice/BusinessProcess$ConnectionCallback;->c:Lcom/nd/dianjin/webservice/BusinessProcess$ResponseType;

    invoke-virtual {v2}, Lcom/nd/dianjin/webservice/BusinessProcess$ResponseType;->ordinal()I

    move-result v2

    aget v0, v0, v2
    :try_end_0
    .catch Lorg/json/JSONException; {:try_start_0 .. :try_end_0} :catch_0
    .catch Lcom/nd/dianjin/webservice/BusinessProcess$ServerResponseException; {:try_start_0 .. :try_end_0} :catch_1

    packed-switch v0, :pswitch_data_0

    :goto_1
    invoke-static {}, Lcom/nd/dianjin/webservice/BusinessProcess;->a()Z

    move-result v0

    if-eqz v0, :cond_0

    iget-object v0, p0, Lcom/nd/dianjin/webservice/BusinessProcess$ConnectionCallback;->b:Lcom/nd/dianjin/webservice/b;

    invoke-virtual {v0}, Lcom/nd/dianjin/webservice/b;->b()V

    goto :goto_0

    :pswitch_0
    :try_start_1
    iget-object v0, p0, Lcom/nd/dianjin/webservice/BusinessProcess$ConnectionCallback;->a:Lcom/nd/dianjin/webservice/BusinessProcess$ResponseListener;

    check-cast v0, Lcom/nd/dianjin/webservice/BusinessProcess$JSONObjectResponseListener;

    new-instance v2, Lorg/json/JSONObject;

    invoke-direct {v2, v1}, Lorg/json/JSONObject;-><init>(Ljava/lang/String;)V

    invoke-virtual {v0, v2}, Lcom/nd/dianjin/webservice/BusinessProcess$JSONObjectResponseListener;->onResponse(Lorg/json/JSONObject;)V
    :try_end_1
    .catch Lorg/json/JSONException; {:try_start_1 .. :try_end_1} :catch_0
    .catch Lcom/nd/dianjin/webservice/BusinessProcess$ServerResponseException; {:try_start_1 .. :try_end_1} :catch_1

    goto :goto_1

    :catch_0
    move-exception v0

    invoke-virtual {v0}, Lorg/json/JSONException;->printStackTrace()V

    :cond_4
    :goto_2
    sget-object v0, Lcom/nd/dianjin/webservice/ConnectionWrapper$ErrorType;->Server:Lcom/nd/dianjin/webservice/ConnectionWrapper$ErrorType;

    invoke-virtual {p0, v0}, Lcom/nd/dianjin/webservice/BusinessProcess$ConnectionCallback;->onError(Lcom/nd/dianjin/webservice/ConnectionWrapper$ErrorType;)V

    goto :goto_1

    :pswitch_1
    :try_start_2
    iget-object v0, p0, Lcom/nd/dianjin/webservice/BusinessProcess$ConnectionCallback;->a:Lcom/nd/dianjin/webservice/BusinessProcess$ResponseListener;

    check-cast v0, Lcom/nd/dianjin/webservice/BusinessProcess$JSONArrayResponseListener;

    new-instance v2, Lorg/json/JSONArray;

    invoke-direct {v2, v1}, Lorg/json/JSONArray;-><init>(Ljava/lang/String;)V

    invoke-virtual {v0, v2}, Lcom/nd/dianjin/webservice/BusinessProcess$JSONArrayResponseListener;->onResponse(Lorg/json/JSONArray;)V
    :try_end_2
    .catch Lorg/json/JSONException; {:try_start_2 .. :try_end_2} :catch_0
    .catch Lcom/nd/dianjin/webservice/BusinessProcess$ServerResponseException; {:try_start_2 .. :try_end_2} :catch_1

    goto :goto_1

    :catch_1
    move-exception v0

    invoke-virtual {v0}, Lcom/nd/dianjin/webservice/BusinessProcess$ServerResponseException;->printStackTrace()V

    goto :goto_2

    :pswitch_2
    :try_start_3
    iget-object v0, p0, Lcom/nd/dianjin/webservice/BusinessProcess$ConnectionCallback;->a:Lcom/nd/dianjin/webservice/BusinessProcess$ResponseListener;

    check-cast v0, Lcom/nd/dianjin/webservice/BusinessProcess$RawResponseListener;

    invoke-virtual {v0, p1}, Lcom/nd/dianjin/webservice/BusinessProcess$RawResponseListener;->onResponse(Ljava/io/InputStream;)V
    :try_end_3
    .catch Lorg/json/JSONException; {:try_start_3 .. :try_end_3} :catch_0
    .catch Lcom/nd/dianjin/webservice/BusinessProcess$ServerResponseException; {:try_start_3 .. :try_end_3} :catch_1

    goto :goto_1

    nop

    :pswitch_data_0
    .packed-switch 0x1
        :pswitch_0
        :pswitch_1
        :pswitch_2
    .end packed-switch
.end method
