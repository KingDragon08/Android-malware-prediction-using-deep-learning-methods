.class public Lcom/nd/dianjin/webservice/ConnectionWrapper;
.super Ljava/lang/Object;


# instance fields
.field private a:Landroid/net/ConnectivityManager;


# direct methods
.method public constructor <init>()V
    .locals 1

    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    const/4 v0, 0x0

    iput-object v0, p0, Lcom/nd/dianjin/webservice/ConnectionWrapper;->a:Landroid/net/ConnectivityManager;

    return-void
.end method

.method public constructor <init>(Landroid/content/Context;)V
    .locals 1

    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    const-string v0, "connectivity"

    invoke-virtual {p1, v0}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Landroid/net/ConnectivityManager;

    iput-object v0, p0, Lcom/nd/dianjin/webservice/ConnectionWrapper;->a:Landroid/net/ConnectivityManager;

    return-void
.end method


# virtual methods
.method public openURL(Ljava/lang/String;Lcom/nd/dianjin/webservice/ConnectionWrapper$ConnectionInterface;Lcom/nd/dianjin/webservice/ServiceRequest;)Z
    .locals 3

    iget-object v0, p0, Lcom/nd/dianjin/webservice/ConnectionWrapper;->a:Landroid/net/ConnectivityManager;

    if-eqz v0, :cond_1

    iget-object v0, p0, Lcom/nd/dianjin/webservice/ConnectionWrapper;->a:Landroid/net/ConnectivityManager;

    invoke-virtual {v0}, Landroid/net/ConnectivityManager;->getActiveNetworkInfo()Landroid/net/NetworkInfo;

    move-result-object v0

    if-eqz v0, :cond_0

    invoke-virtual {v0}, Landroid/net/NetworkInfo;->isAvailable()Z

    move-result v0

    if-nez v0, :cond_1

    :cond_0
    sget-object v0, Lcom/nd/dianjin/webservice/ConnectionWrapper$ErrorType;->Network:Lcom/nd/dianjin/webservice/ConnectionWrapper$ErrorType;

    invoke-interface {p2, v0}, Lcom/nd/dianjin/webservice/ConnectionWrapper$ConnectionInterface;->onError(Lcom/nd/dianjin/webservice/ConnectionWrapper$ErrorType;)V

    const/4 v0, 0x0

    :goto_0
    return v0

    :cond_1
    invoke-static {}, Landroid/os/Looper;->myLooper()Landroid/os/Looper;

    move-result-object v0

    if-eqz v0, :cond_2

    new-instance v0, Lcom/nd/dianjin/webservice/f;

    invoke-direct {v0, p0, p2}, Lcom/nd/dianjin/webservice/f;-><init>(Lcom/nd/dianjin/webservice/ConnectionWrapper;Lcom/nd/dianjin/webservice/ConnectionWrapper$ConnectionInterface;)V

    new-instance v1, Lcom/nd/dianjin/webservice/g;

    invoke-direct {v1, p1, p3, v0}, Lcom/nd/dianjin/webservice/g;-><init>(Ljava/lang/String;Lcom/nd/dianjin/webservice/ServiceRequest;Landroid/os/Handler;)V

    invoke-virtual {v1}, Lcom/nd/dianjin/webservice/g;->start()V

    :goto_1
    const/4 v0, 0x1

    goto :goto_0

    :cond_2
    new-instance v0, Lorg/apache/http/impl/client/DefaultHttpClient;

    invoke-direct {v0}, Lorg/apache/http/impl/client/DefaultHttpClient;-><init>()V

    new-instance v1, Lorg/apache/http/client/methods/HttpGet;

    invoke-direct {v1, p1}, Lorg/apache/http/client/methods/HttpGet;-><init>(Ljava/lang/String;)V

    :try_start_0
    invoke-interface {v0, v1}, Lorg/apache/http/client/HttpClient;->execute(Lorg/apache/http/client/methods/HttpUriRequest;)Lorg/apache/http/HttpResponse;

    move-result-object v0

    invoke-interface {v0}, Lorg/apache/http/HttpResponse;->getStatusLine()Lorg/apache/http/StatusLine;

    move-result-object v1

    invoke-interface {v1}, Lorg/apache/http/StatusLine;->getStatusCode()I

    move-result v1

    const/16 v2, 0xc8

    if-ne v1, v2, :cond_3

    invoke-interface {v0}, Lorg/apache/http/HttpResponse;->getEntity()Lorg/apache/http/HttpEntity;

    move-result-object v0

    invoke-interface {v0}, Lorg/apache/http/HttpEntity;->getContent()Ljava/io/InputStream;

    move-result-object v0

    invoke-interface {p2, v0}, Lcom/nd/dianjin/webservice/ConnectionWrapper$ConnectionInterface;->onResponse(Ljava/io/InputStream;)V
    :try_end_0
    .catch Ljava/io/IOException; {:try_start_0 .. :try_end_0} :catch_0

    goto :goto_1

    :catch_0
    move-exception v0

    sget-object v0, Lcom/nd/dianjin/webservice/ConnectionWrapper$ErrorType;->Network:Lcom/nd/dianjin/webservice/ConnectionWrapper$ErrorType;

    invoke-interface {p2, v0}, Lcom/nd/dianjin/webservice/ConnectionWrapper$ConnectionInterface;->onError(Lcom/nd/dianjin/webservice/ConnectionWrapper$ErrorType;)V

    goto :goto_1

    :cond_3
    :try_start_1
    sget-object v0, Lcom/nd/dianjin/webservice/ConnectionWrapper$ErrorType;->Server:Lcom/nd/dianjin/webservice/ConnectionWrapper$ErrorType;

    invoke-interface {p2, v0}, Lcom/nd/dianjin/webservice/ConnectionWrapper$ConnectionInterface;->onError(Lcom/nd/dianjin/webservice/ConnectionWrapper$ErrorType;)V
    :try_end_1
    .catch Ljava/io/IOException; {:try_start_1 .. :try_end_1} :catch_0

    goto :goto_1
.end method
