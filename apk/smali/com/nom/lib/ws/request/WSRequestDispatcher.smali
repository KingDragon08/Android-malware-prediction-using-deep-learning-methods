.class public Lcom/nom/lib/ws/request/WSRequestDispatcher;
.super Ljava/lang/Object;
.source "WSRequestDispatcher.java"


# annotations
.annotation system Ldalvik/annotation/MemberClasses;
    value = {
        Lcom/nom/lib/ws/request/WSRequestDispatcher$DispatchWorkerThread;,
        Lcom/nom/lib/ws/request/WSRequestDispatcher$MainThreadCallback;
    }
.end annotation


# static fields
.field public static final HTTP_STATUS_APP_NO_NETWORK_ERROR:I = 0x3e9

.field public static final HTTP_STATUS_APP_UNKNOWN_ERROR:I = 0x3e8

.field public static final HTTP_STATUS_CLIENT_ERROR:I = 0x190

.field public static final HTTP_STATUS_MULTIPLE_CHOICES:I = 0x12c

.field public static final HTTP_STATUS_SERVER_ERROR:I = 0x1f4

.field public static final HTTP_STATUS_SUCCESSFUL:I = 0xc8

.field public static final HTTP_STATUS_YG_SERVICE_ERROR:I = 0x258

.field public static final YG_SERVICE_ERROR:I = 0x2710


# instance fields
.field private mConnectivityManager:Landroid/net/ConnectivityManager;

.field private mFuture:Ljava/util/concurrent/Future;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/concurrent/Future",
            "<*>;"
        }
    .end annotation
.end field

.field private mHttpClient:Lorg/apache/http/client/HttpClient;

.field private final mMainThreadHandler:Landroid/os/Handler;

.field protected mRequest:Lcom/nom/lib/ws/request/WSRequest;

.field private mThreadPool:Ljava/util/concurrent/ExecutorService;


# direct methods
.method public constructor <init>(Lorg/apache/http/client/HttpClient;Landroid/net/ConnectivityManager;Ljava/util/concurrent/ExecutorService;)V
    .locals 1
    .param p1, "client"    # Lorg/apache/http/client/HttpClient;
    .param p2, "connectivityManager"    # Landroid/net/ConnectivityManager;
    .param p3, "threadPool"    # Ljava/util/concurrent/ExecutorService;

    .prologue
    .line 51
    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    .line 52
    iput-object p1, p0, Lcom/nom/lib/ws/request/WSRequestDispatcher;->mHttpClient:Lorg/apache/http/client/HttpClient;

    .line 53
    iput-object p2, p0, Lcom/nom/lib/ws/request/WSRequestDispatcher;->mConnectivityManager:Landroid/net/ConnectivityManager;

    .line 54
    iput-object p3, p0, Lcom/nom/lib/ws/request/WSRequestDispatcher;->mThreadPool:Ljava/util/concurrent/ExecutorService;

    .line 57
    new-instance v0, Landroid/os/Handler;

    invoke-direct {v0}, Landroid/os/Handler;-><init>()V

    iput-object v0, p0, Lcom/nom/lib/ws/request/WSRequestDispatcher;->mMainThreadHandler:Landroid/os/Handler;

    .line 58
    return-void
.end method


# virtual methods
.method public cancel()Z
    .locals 4

    .prologue
    const/4 v3, 0x0

    .line 67
    iget-object v1, p0, Lcom/nom/lib/ws/request/WSRequestDispatcher;->mRequest:Lcom/nom/lib/ws/request/WSRequest;

    if-nez v1, :cond_0

    .line 68
    const/4 v1, 0x0

    .line 80
    :goto_0
    return v1

    .line 71
    :cond_0
    const/4 v0, 0x0

    .line 72
    .local v0, "success":Z
    iget-object v1, p0, Lcom/nom/lib/ws/request/WSRequestDispatcher;->mFuture:Ljava/util/concurrent/Future;

    if-eqz v1, :cond_1

    .line 73
    iget-object v1, p0, Lcom/nom/lib/ws/request/WSRequestDispatcher;->mFuture:Ljava/util/concurrent/Future;

    const/4 v2, 0x1

    invoke-interface {v1, v2}, Ljava/util/concurrent/Future;->cancel(Z)Z

    move-result v0

    .line 77
    :cond_1
    iput-object v3, p0, Lcom/nom/lib/ws/request/WSRequestDispatcher;->mRequest:Lcom/nom/lib/ws/request/WSRequest;

    .line 78
    iput-object v3, p0, Lcom/nom/lib/ws/request/WSRequestDispatcher;->mFuture:Ljava/util/concurrent/Future;

    move v1, v0

    .line 80
    goto :goto_0
.end method

.method protected doInBackground(Lcom/nom/lib/ws/request/WSRequest;)V
    .locals 14
    .param p1, "wsRequest"    # Lcom/nom/lib/ws/request/WSRequest;

    .prologue
    .line 104
    const/4 v9, 0x0

    .line 105
    .local v9, "statusCode":I
    const/4 v1, 0x0

    .line 108
    .local v1, "content":Ljava/lang/Object;
    iget-object v11, p0, Lcom/nom/lib/ws/request/WSRequestDispatcher;->mConnectivityManager:Landroid/net/ConnectivityManager;

    if-eqz v11, :cond_1

    .line 109
    iget-object v11, p0, Lcom/nom/lib/ws/request/WSRequestDispatcher;->mConnectivityManager:Landroid/net/ConnectivityManager;

    invoke-virtual {v11}, Landroid/net/ConnectivityManager;->getActiveNetworkInfo()Landroid/net/NetworkInfo;

    move-result-object v0

    .line 110
    .local v0, "activeNetInfo":Landroid/net/NetworkInfo;
    if-eqz v0, :cond_0

    invoke-virtual {v0}, Landroid/net/NetworkInfo;->isConnected()Z

    move-result v11

    if-nez v11, :cond_1

    .line 111
    :cond_0
    const/16 v9, 0x3e9

    .line 115
    .end local v0    # "activeNetInfo":Landroid/net/NetworkInfo;
    :cond_1
    if-nez v9, :cond_d

    .line 118
    :try_start_0
    invoke-virtual {p1}, Lcom/nom/lib/ws/request/WSRequest;->toHttpRequest()Lorg/apache/http/client/methods/HttpUriRequest;

    move-result-object v6

    .line 126
    .local v6, "httpRequest":Lorg/apache/http/client/methods/HttpUriRequest;
    iget-object v11, p0, Lcom/nom/lib/ws/request/WSRequestDispatcher;->mHttpClient:Lorg/apache/http/client/HttpClient;

    invoke-interface {v11, v6}, Lorg/apache/http/client/HttpClient;->execute(Lorg/apache/http/client/methods/HttpUriRequest;)Lorg/apache/http/HttpResponse;

    move-result-object v7

    .line 134
    .local v7, "httpResponse":Lorg/apache/http/HttpResponse;
    invoke-interface {v7}, Lorg/apache/http/HttpResponse;->getStatusLine()Lorg/apache/http/StatusLine;

    move-result-object v11

    invoke-interface {v11}, Lorg/apache/http/StatusLine;->getStatusCode()I

    move-result v9

    .line 135
    const/16 v11, 0xc8

    if-lt v9, v11, :cond_5

    .line 136
    const/16 v11, 0x12c

    if-ge v9, v11, :cond_5

    .line 138
    invoke-virtual {p1}, Lcom/nom/lib/ws/request/WSRequest;->getResponseParser()Lcom/nom/lib/ws/response/WSResponseParser;

    move-result-object v8

    .line 140
    .local v8, "responseParser":Lcom/nom/lib/ws/response/WSResponseParser;
    invoke-interface {v7}, Lorg/apache/http/HttpResponse;->getEntity()Lorg/apache/http/HttpEntity;

    move-result-object v4

    .line 141
    .local v4, "httpEntity":Lorg/apache/http/HttpEntity;
    if-eqz v4, :cond_2

    .line 143
    new-instance v5, Lorg/apache/http/entity/BufferedHttpEntity;

    invoke-direct {v5, v4}, Lorg/apache/http/entity/BufferedHttpEntity;-><init>(Lorg/apache/http/HttpEntity;)V
    :try_end_0
    .catch Lorg/apache/http/client/ClientProtocolException; {:try_start_0 .. :try_end_0} :catch_0
    .catch Ljava/net/SocketTimeoutException; {:try_start_0 .. :try_end_0} :catch_1
    .catch Ljava/io/IOException; {:try_start_0 .. :try_end_0} :catch_2
    .catch Ljava/lang/IllegalStateException; {:try_start_0 .. :try_end_0} :catch_3
    .catch Ljava/lang/Throwable; {:try_start_0 .. :try_end_0} :catch_4

    .end local v4    # "httpEntity":Lorg/apache/http/HttpEntity;
    .local v5, "httpEntity":Lorg/apache/http/HttpEntity;
    move-object v4, v5

    .line 145
    .end local v5    # "httpEntity":Lorg/apache/http/HttpEntity;
    .restart local v4    # "httpEntity":Lorg/apache/http/HttpEntity;
    :cond_2
    if-eqz v4, :cond_3

    .line 146
    const/4 v3, 0x0

    .line 148
    .local v3, "httpContent":Ljava/io/InputStream;
    :try_start_1
    invoke-interface {v4}, Lorg/apache/http/HttpEntity;->getContent()Ljava/io/InputStream;

    move-result-object v3

    .line 149
    invoke-virtual {v8, v3}, Lcom/nom/lib/ws/response/WSResponseParser;->parseContent(Ljava/io/InputStream;)Ljava/lang/Object;
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    move-result-object v1

    .line 151
    if-eqz v3, :cond_3

    .line 152
    :try_start_2
    invoke-virtual {v3}, Ljava/io/InputStream;->close()V
    :try_end_2
    .catch Lorg/apache/http/client/ClientProtocolException; {:try_start_2 .. :try_end_2} :catch_0
    .catch Ljava/net/SocketTimeoutException; {:try_start_2 .. :try_end_2} :catch_1
    .catch Ljava/io/IOException; {:try_start_2 .. :try_end_2} :catch_2
    .catch Ljava/lang/IllegalStateException; {:try_start_2 .. :try_end_2} :catch_3
    .catch Ljava/lang/Throwable; {:try_start_2 .. :try_end_2} :catch_4

    .line 156
    .end local v1    # "content":Ljava/lang/Object;
    .end local v3    # "httpContent":Ljava/io/InputStream;
    :cond_3
    const/4 v4, 0x0

    move-object v11, v1

    .line 220
    .end local v4    # "httpEntity":Lorg/apache/http/HttpEntity;
    .end local v6    # "httpRequest":Lorg/apache/http/client/methods/HttpUriRequest;
    .end local v7    # "httpResponse":Lorg/apache/http/HttpResponse;
    .end local v8    # "responseParser":Lcom/nom/lib/ws/response/WSResponseParser;
    :goto_0
    iget-object v12, p0, Lcom/nom/lib/ws/request/WSRequestDispatcher;->mMainThreadHandler:Landroid/os/Handler;

    new-instance v13, Lcom/nom/lib/ws/request/WSRequestDispatcher$MainThreadCallback;

    invoke-direct {v13, p0, v9, v11}, Lcom/nom/lib/ws/request/WSRequestDispatcher$MainThreadCallback;-><init>(Lcom/nom/lib/ws/request/WSRequestDispatcher;ILjava/lang/Object;)V

    invoke-virtual {v12, v13}, Landroid/os/Handler;->post(Ljava/lang/Runnable;)Z

    .line 221
    return-void

    .line 150
    .restart local v1    # "content":Ljava/lang/Object;
    .restart local v3    # "httpContent":Ljava/io/InputStream;
    .restart local v4    # "httpEntity":Lorg/apache/http/HttpEntity;
    .restart local v6    # "httpRequest":Lorg/apache/http/client/methods/HttpUriRequest;
    .restart local v7    # "httpResponse":Lorg/apache/http/HttpResponse;
    .restart local v8    # "responseParser":Lcom/nom/lib/ws/response/WSResponseParser;
    :catchall_0
    move-exception v11

    .line 151
    if-eqz v3, :cond_4

    .line 152
    :try_start_3
    invoke-virtual {v3}, Ljava/io/InputStream;->close()V

    .line 154
    :cond_4
    throw v11

    .line 202
    .end local v1    # "content":Ljava/lang/Object;
    .end local v3    # "httpContent":Ljava/io/InputStream;
    .end local v4    # "httpEntity":Lorg/apache/http/HttpEntity;
    .end local v6    # "httpRequest":Lorg/apache/http/client/methods/HttpUriRequest;
    .end local v7    # "httpResponse":Lorg/apache/http/HttpResponse;
    .end local v8    # "responseParser":Lcom/nom/lib/ws/response/WSResponseParser;
    :catch_0
    move-exception v11

    move-object v2, v11

    .line 204
    .local v2, "e":Lorg/apache/http/client/ClientProtocolException;
    const/16 v9, 0x3e8

    move-object v11, v1

    goto :goto_0

    .line 158
    .end local v2    # "e":Lorg/apache/http/client/ClientProtocolException;
    .restart local v1    # "content":Ljava/lang/Object;
    .restart local v6    # "httpRequest":Lorg/apache/http/client/methods/HttpUriRequest;
    .restart local v7    # "httpResponse":Lorg/apache/http/HttpResponse;
    :cond_5
    const/16 v11, 0x258

    if-ne v9, v11, :cond_9

    .line 160
    new-instance v8, Lcom/nom/lib/ws/response/WSResponseStringParser;

    invoke-direct {v8}, Lcom/nom/lib/ws/response/WSResponseStringParser;-><init>()V

    .line 162
    .restart local v8    # "responseParser":Lcom/nom/lib/ws/response/WSResponseParser;
    invoke-interface {v7}, Lorg/apache/http/HttpResponse;->getEntity()Lorg/apache/http/HttpEntity;

    move-result-object v4

    .line 163
    .restart local v4    # "httpEntity":Lorg/apache/http/HttpEntity;
    if-eqz v4, :cond_6

    .line 165
    new-instance v5, Lorg/apache/http/entity/BufferedHttpEntity;

    invoke-direct {v5, v4}, Lorg/apache/http/entity/BufferedHttpEntity;-><init>(Lorg/apache/http/HttpEntity;)V
    :try_end_3
    .catch Lorg/apache/http/client/ClientProtocolException; {:try_start_3 .. :try_end_3} :catch_0
    .catch Ljava/net/SocketTimeoutException; {:try_start_3 .. :try_end_3} :catch_1
    .catch Ljava/io/IOException; {:try_start_3 .. :try_end_3} :catch_2
    .catch Ljava/lang/IllegalStateException; {:try_start_3 .. :try_end_3} :catch_3
    .catch Ljava/lang/Throwable; {:try_start_3 .. :try_end_3} :catch_4

    .end local v4    # "httpEntity":Lorg/apache/http/HttpEntity;
    .restart local v5    # "httpEntity":Lorg/apache/http/HttpEntity;
    move-object v4, v5

    .line 167
    .end local v5    # "httpEntity":Lorg/apache/http/HttpEntity;
    .restart local v4    # "httpEntity":Lorg/apache/http/HttpEntity;
    :cond_6
    if-eqz v4, :cond_7

    .line 168
    const/4 v3, 0x0

    .line 170
    .restart local v3    # "httpContent":Ljava/io/InputStream;
    :try_start_4
    invoke-interface {v4}, Lorg/apache/http/HttpEntity;->getContent()Ljava/io/InputStream;

    move-result-object v3

    .line 171
    invoke-virtual {v8, v3}, Lcom/nom/lib/ws/response/WSResponseParser;->parseContent(Ljava/io/InputStream;)Ljava/lang/Object;
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    move-result-object v1

    .line 173
    if-eqz v3, :cond_7

    .line 174
    :try_start_5
    invoke-virtual {v3}, Ljava/io/InputStream;->close()V

    .line 178
    .end local v1    # "content":Ljava/lang/Object;
    .end local v3    # "httpContent":Ljava/io/InputStream;
    :cond_7
    const/4 v4, 0x0

    move-object v11, v1

    goto :goto_0

    .line 172
    .restart local v1    # "content":Ljava/lang/Object;
    .restart local v3    # "httpContent":Ljava/io/InputStream;
    :catchall_1
    move-exception v11

    .line 173
    if-eqz v3, :cond_8

    .line 174
    invoke-virtual {v3}, Ljava/io/InputStream;->close()V

    .line 176
    :cond_8
    throw v11

    .line 205
    .end local v1    # "content":Ljava/lang/Object;
    .end local v3    # "httpContent":Ljava/io/InputStream;
    .end local v4    # "httpEntity":Lorg/apache/http/HttpEntity;
    .end local v6    # "httpRequest":Lorg/apache/http/client/methods/HttpUriRequest;
    .end local v7    # "httpResponse":Lorg/apache/http/HttpResponse;
    .end local v8    # "responseParser":Lcom/nom/lib/ws/response/WSResponseParser;
    :catch_1
    move-exception v11

    move-object v2, v11

    .line 207
    .local v2, "e":Ljava/net/SocketTimeoutException;
    const/16 v9, 0x3e9

    move-object v11, v1

    goto :goto_0

    .line 180
    .end local v2    # "e":Ljava/net/SocketTimeoutException;
    .restart local v1    # "content":Ljava/lang/Object;
    .restart local v6    # "httpRequest":Lorg/apache/http/client/methods/HttpUriRequest;
    .restart local v7    # "httpResponse":Lorg/apache/http/HttpResponse;
    :cond_9
    const/16 v11, 0x1f4

    if-ne v9, v11, :cond_d

    .line 182
    new-instance v8, Lcom/nom/lib/ws/response/WSResponseStringParser;

    invoke-direct {v8}, Lcom/nom/lib/ws/response/WSResponseStringParser;-><init>()V

    .line 184
    .restart local v8    # "responseParser":Lcom/nom/lib/ws/response/WSResponseParser;
    invoke-interface {v7}, Lorg/apache/http/HttpResponse;->getEntity()Lorg/apache/http/HttpEntity;

    move-result-object v4

    .line 185
    .restart local v4    # "httpEntity":Lorg/apache/http/HttpEntity;
    if-eqz v4, :cond_a

    .line 187
    new-instance v5, Lorg/apache/http/entity/BufferedHttpEntity;

    invoke-direct {v5, v4}, Lorg/apache/http/entity/BufferedHttpEntity;-><init>(Lorg/apache/http/HttpEntity;)V
    :try_end_5
    .catch Lorg/apache/http/client/ClientProtocolException; {:try_start_5 .. :try_end_5} :catch_0
    .catch Ljava/net/SocketTimeoutException; {:try_start_5 .. :try_end_5} :catch_1
    .catch Ljava/io/IOException; {:try_start_5 .. :try_end_5} :catch_2
    .catch Ljava/lang/IllegalStateException; {:try_start_5 .. :try_end_5} :catch_3
    .catch Ljava/lang/Throwable; {:try_start_5 .. :try_end_5} :catch_4

    .end local v4    # "httpEntity":Lorg/apache/http/HttpEntity;
    .restart local v5    # "httpEntity":Lorg/apache/http/HttpEntity;
    move-object v4, v5

    .line 189
    .end local v5    # "httpEntity":Lorg/apache/http/HttpEntity;
    .restart local v4    # "httpEntity":Lorg/apache/http/HttpEntity;
    :cond_a
    if-eqz v4, :cond_b

    .line 190
    const/4 v3, 0x0

    .line 192
    .restart local v3    # "httpContent":Ljava/io/InputStream;
    :try_start_6
    invoke-interface {v4}, Lorg/apache/http/HttpEntity;->getContent()Ljava/io/InputStream;

    move-result-object v3

    .line 193
    invoke-virtual {v8, v3}, Lcom/nom/lib/ws/response/WSResponseParser;->parseContent(Ljava/io/InputStream;)Ljava/lang/Object;
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_2

    move-result-object v1

    .line 195
    if-eqz v3, :cond_b

    .line 196
    :try_start_7
    invoke-virtual {v3}, Ljava/io/InputStream;->close()V

    .end local v1    # "content":Ljava/lang/Object;
    .end local v3    # "httpContent":Ljava/io/InputStream;
    :cond_b
    move-object v11, v1

    .line 200
    goto :goto_0

    .line 194
    .restart local v1    # "content":Ljava/lang/Object;
    .restart local v3    # "httpContent":Ljava/io/InputStream;
    :catchall_2
    move-exception v11

    .line 195
    if-eqz v3, :cond_c

    .line 196
    invoke-virtual {v3}, Ljava/io/InputStream;->close()V

    .line 198
    :cond_c
    throw v11
    :try_end_7
    .catch Lorg/apache/http/client/ClientProtocolException; {:try_start_7 .. :try_end_7} :catch_0
    .catch Ljava/net/SocketTimeoutException; {:try_start_7 .. :try_end_7} :catch_1
    .catch Ljava/io/IOException; {:try_start_7 .. :try_end_7} :catch_2
    .catch Ljava/lang/IllegalStateException; {:try_start_7 .. :try_end_7} :catch_3
    .catch Ljava/lang/Throwable; {:try_start_7 .. :try_end_7} :catch_4

    .line 208
    .end local v1    # "content":Ljava/lang/Object;
    .end local v3    # "httpContent":Ljava/io/InputStream;
    .end local v4    # "httpEntity":Lorg/apache/http/HttpEntity;
    .end local v6    # "httpRequest":Lorg/apache/http/client/methods/HttpUriRequest;
    .end local v7    # "httpResponse":Lorg/apache/http/HttpResponse;
    .end local v8    # "responseParser":Lcom/nom/lib/ws/response/WSResponseParser;
    :catch_2
    move-exception v11

    move-object v2, v11

    .line 210
    .local v2, "e":Ljava/io/IOException;
    const/16 v9, 0x3e8

    move-object v11, v1

    goto :goto_0

    .line 211
    .end local v2    # "e":Ljava/io/IOException;
    :catch_3
    move-exception v11

    move-object v2, v11

    .line 213
    .local v2, "e":Ljava/lang/IllegalStateException;
    const/16 v9, 0x3e8

    move-object v11, v1

    goto/16 :goto_0

    .line 214
    .end local v2    # "e":Ljava/lang/IllegalStateException;
    :catch_4
    move-exception v11

    move-object v10, v11

    .line 216
    .local v10, "t":Ljava/lang/Throwable;
    const/16 v9, 0x3e8

    move-object v11, v1

    goto/16 :goto_0

    .end local v10    # "t":Ljava/lang/Throwable;
    .restart local v1    # "content":Ljava/lang/Object;
    :cond_d
    move-object v11, v1

    goto/16 :goto_0
.end method

.method public execute(Lcom/nom/lib/ws/request/WSRequest;)Z
    .locals 3
    .param p1, "request"    # Lcom/nom/lib/ws/request/WSRequest;

    .prologue
    .line 89
    iget-object v0, p0, Lcom/nom/lib/ws/request/WSRequestDispatcher;->mRequest:Lcom/nom/lib/ws/request/WSRequest;

    if-eqz v0, :cond_0

    .line 91
    const/4 v0, 0x0

    .line 97
    :goto_0
    return v0

    .line 94
    :cond_0
    iput-object p1, p0, Lcom/nom/lib/ws/request/WSRequestDispatcher;->mRequest:Lcom/nom/lib/ws/request/WSRequest;

    .line 95
    iget-object v0, p0, Lcom/nom/lib/ws/request/WSRequestDispatcher;->mThreadPool:Ljava/util/concurrent/ExecutorService;

    new-instance v1, Lcom/nom/lib/ws/request/WSRequestDispatcher$DispatchWorkerThread;

    iget-object v2, p0, Lcom/nom/lib/ws/request/WSRequestDispatcher;->mRequest:Lcom/nom/lib/ws/request/WSRequest;

    invoke-direct {v1, p0, v2}, Lcom/nom/lib/ws/request/WSRequestDispatcher$DispatchWorkerThread;-><init>(Lcom/nom/lib/ws/request/WSRequestDispatcher;Lcom/nom/lib/ws/request/WSRequest;)V

    invoke-interface {v0, v1}, Ljava/util/concurrent/ExecutorService;->submit(Ljava/lang/Runnable;)Ljava/util/concurrent/Future;

    move-result-object v0

    iput-object v0, p0, Lcom/nom/lib/ws/request/WSRequestDispatcher;->mFuture:Ljava/util/concurrent/Future;

    .line 97
    const/4 v0, 0x1

    goto :goto_0
.end method

.method protected onPostExecute(ILjava/lang/Object;)V
    .locals 2
    .param p1, "statusCode"    # I
    .param p2, "content"    # Ljava/lang/Object;

    .prologue
    const/4 v1, 0x0

    .line 227
    iget-object v0, p0, Lcom/nom/lib/ws/request/WSRequestDispatcher;->mRequest:Lcom/nom/lib/ws/request/WSRequest;

    if-nez v0, :cond_0

    .line 234
    :goto_0
    return-void

    .line 231
    :cond_0
    iget-object v0, p0, Lcom/nom/lib/ws/request/WSRequestDispatcher;->mRequest:Lcom/nom/lib/ws/request/WSRequest;

    invoke-virtual {v0, p1, p2}, Lcom/nom/lib/ws/request/WSRequest;->receivedResponse(ILjava/lang/Object;)V

    .line 232
    iput-object v1, p0, Lcom/nom/lib/ws/request/WSRequestDispatcher;->mRequest:Lcom/nom/lib/ws/request/WSRequest;

    .line 233
    iput-object v1, p0, Lcom/nom/lib/ws/request/WSRequestDispatcher;->mFuture:Ljava/util/concurrent/Future;

    goto :goto_0
.end method
